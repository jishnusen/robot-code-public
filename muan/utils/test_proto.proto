syntax = "proto2";

message TestProto {
  optional string test_string = 1;
  optional uint64 test_uint = 2;
  message SubProto {
    optional uint64 id = 1;
    optional double num = 2;
  }
  optional SubProto sub_message = 3;
  optional bool is_sane = 4;
}

message DeathProto {
  repeated string test_string = 1;
  optional uint64 test_uint = 2;
  message SubProto {
    optional uint64 id = 1;
    optional double num = 2;
  }
  optional SubProto sub_message = 3;
  optional bool is_sane = 4;
}

message EnumTest {
  enum TestEnum {
    DEFAULT = 0;
    SOME_OPTION = 1;
    OPTION_2 = 2;
  }
  optional TestEnum test_enum = 1;
}

message OneofTest {
  message Test1 {
    optional double val = 1;
  }
  message Test2 {
    optional string val = 1;
  }

  oneof test {
    Test1 test_1 = 1;
    Test2 test_2 = 2;
  }
}
