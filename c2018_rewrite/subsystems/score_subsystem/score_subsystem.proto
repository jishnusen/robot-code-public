syntax = "proto2";

option cc_enable_arenas = true;

package c2018.subsystems.score_subsystem;

message ScoreSubsystemInput {
  required uint64 timestamp = 1;
  
  required double elevator_encoder = 2;
  required double wrist_encoder = 3;

  required double elevator_velocity = 4;
  required double wrist_velocity = 5;
  
  required double elevator_voltage = 6;
  required double wrist_voltage = 7;

  required bool elevator_hall = 8;
  required bool wrist_hall = 9;

  required bool intake_proxy = 10;
}

enum TalonOutput {
  OPEN_LOOP = 0;
  POSITION = 1;
}

message ScoreSubsystemOutput {
  required TalonOutput elevator_output_type = 1;
  required TalonOutput wrist_output_type = 2;
  
  required double intake_voltage = 3;
  
  // Depends on TalonOutputs
  required double elevator_setpoint = 4;
  required double wrist_setpoint = 5;

  // Only if in POSITION
  optional double elevator_setpoint_ff = 6;
  optional double wrist_setpoint_ff = 7;

  required bool intake_open = 8;
  required bool intake_close = 9;

  required bool whisker = 10;
}

enum ScoreState {
  CALIBRATING = 0;
  HOLDING = 1;
  INTAKING_TO_STOW = 2;
  INTAKING_ONLY = 3;
}

enum PinchState {
  IDLE_WITH_CUBE = 0;
  IDLE_NO_CUBE = 1;
  MOVING = 2;
}

message ScoreSubsystemStatus {
  required uint64 timestamp = 1;

  required double elevator_height = 2;
  required double wrist_angle = 3;

  required double elevator_velocity = 4;
  required double wrist_velocity = 5;

  required double elevator_acceleration = 6;
  required double wrist_acceleration = 7;

  required double elevator_unprofiled_goal = 8;
  required double wrist_unprofiled_goal = 9;

  required double elevator_profiled_goal = 10;
  required double wrist_profiled_goal = 11;

  required bool elevator_calibrated = 12;
  required bool wrist_calibrated = 13;

  required bool elevator_encoder_fault = 14;
  required bool wrist_encoder_fault = 15;

  required bool elevator_at_top = 16;

  required PinchState pinch_state = 17;
  required ScoreState score_state = 18;
  required IntakeMode intake_state = 19;

  required bool has_cube = 20;

  required double elevator_time_left = 21;
  required double wrist_time_left = 22;
}

enum ScoreGoal {
  SCORE_NONE = 0; // Let the state machine progress
  INTAKE_0 = 1;
  INTAKE_1 = 2;
  INTAKE_2 = 3;
  STOW = 4;
  SWITCH = 5;
  EXCHANGE = 6;
  PORTAL = 7;
  SCALE_LOW_FORWARD = 8;
  SCALE_LOW_REVERSE = 9;
  SCALE_MID_FORWARD = 10;
  SCALE_MID_REVERSE = 11;
  SCALE_HIGH_FORWARD = 12;
  SCALE_HIGH_REVERSE = 13;
  SCALE_SUPER_HIGH_FORWARD = 14;
  SCALE_SUPER_HIGH_REVERSE = 15;
  SCALE_SHOOT = 16;
}

enum IntakeMode {
  // Doing nothing - not running the intake; just hold the cube if we have one
  INTAKE_NONE = 0;
  // The default intake mode
  INTAKE = 1;
  // Usually to be used in series - open the intake, then close it around a cube
  // while running it
  INTAKE_OPEN = 2;
  INTAKE_CLOSE = 3;
  // Intaking, but pinched and ignoring the sensor for state transitions
  SETTLE = 4;
  // Spit out at different speeds (for scoring)
  OUTTAKE_SLOW = 5;
  OUTTAKE_FAST = 6;
  // Drop it without running the intake
  DROP = 7;
}

message ScoreSubsystemGoal {
  required uint64 timestamp = 1;

  required ScoreGoal score_goal = 2;
  required IntakeMode intake_goal = 3;

  required double elevator_god_mode_goal = 4;
  required double wrist_god_mode_goal = 5;
}
